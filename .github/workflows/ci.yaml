name: Goodreads Metadata Scraper CI

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  changes:
    name: Detect changed files
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      src_or_tests: ${{ steps.filter.outputs.src_or_tests }}
    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src_or_tests:
              - 'src/**'
              - 'tests/**'
              - 'Cargo.toml'
              - 'Cargo.lock'

  lint:
    name: Lint Rust code
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.src_or_tests == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install lint components
        run: rustup component add clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy (pedantic)
        run: cargo clippy --all-targets --all-features -- -W clippy::pedantic -D warnings

  test:
    name: Run Tests (with retry)
    runs-on: ubuntu-latest
    needs: [changes, lint]
    if: needs.changes.outputs.src_or_tests == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run tests (first attempt)
        id: first
        continue-on-error: true
        run: cargo test -- --test-threads=1

      - name: Retry tests if first attempt failed
        if: ${{ steps.first.outcome == 'failure' }}
        id: retry
        continue-on-error: true
        run: |
          echo "First attempt failed. Retrying after 30s..."
          sleep 30
          cargo test -- --test-threads=1

      - name: Fail if both attempts failed
        if: ${{ steps.first.outcome == 'failure' && steps.retry.outcome == 'failure' }}
        run: |
          echo "Tests failed after retry."
          exit 1
